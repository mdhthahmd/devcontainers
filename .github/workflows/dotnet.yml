name: Build, publish and version dotnet devcontainer image

on:
  push:
    paths:
      - 'containers/dotnet'
      - '.github/workflows/dotnet.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DEV_ENV : dotnet

jobs:
  publish-latest:
    name: Build and push latest image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Extract metadata (tags, labels) for docker
        id: meta
        uses: docker/metadata-action@v3.5.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.DEV_ENV }}
          tags: |
            type=raw,value=latest
          labels: |
            maintainer=${{ github.actor }}
            org.opencontainers.image.title=dotnet 5.0 devcontainer
            org.opencontainers.image.description=A devlopment environment for dotnet applications, nvm and nodejs is intalled
            org.opencontainers.image.vendor=${{ github.actor }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2.7.0
        with:
          context: ./containers/dotnet
          build-args: |
            VARIANT=5.0
            NODE_VERSION=lts/*
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name : save image name to output
        id: save
        run:
          echo "::set-output name=image::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.DEV_ENV }}"

    outputs:
      image : ${{ steps.save.outputs.image }}
  
  generate-tag:
    name: Generate versioned tag
    needs: publish-latest
    runs-on: ubuntu-latest
    container: 
      image: ${{ needs.publish-latest.outputs.image }}:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GH_TOKEN }}

    steps: 
      - name: View Tag
        run: echo "sdk-$(dotnet --version)-nodejs-$(echo $(node --version) | cut -c 2-)"

      - name: Retrieve Tag
        id: version
        run: |
          echo "::set-output name=tag::$(echo "sdk-$(dotnet --version)-nodejs-$(echo $(node --version) | cut -c 2-)")"
          
    outputs:
      tag: ${{ steps.version.outputs.tag }}
  
  apply-tag:
    name : Push versioned image
    needs: [publish-latest, generate-tag]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to the container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Pull the latest image
        run: docker pull ${{ needs.publish-latest.outputs.image }}:latest

      - name: Re-Tag the latest image with versioned tag
        run: docker tag ${{ needs.publish-latest.outputs.image }}:latest ${{ needs.publish-latest.outputs.image }}:${{ needs.generate-tag.outputs.tag }}

      - name: Push the image to registry
        run: docker push ${{ needs.publish-latest.outputs.image }}:${{ needs.generate-tag.outputs.tag }}
